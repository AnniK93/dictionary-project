{"ast":null,"code":"var _jsxFileName = \"/Users/annikaklein/Documents/Sonstiges/Coding/GitHub/dictionary-project/src/Meaning.js\";\nimport React from \"react\";\nimport \"./Meaning.css\";\nimport Synonyms from \"./Synonyms\";\nimport Example from \"./Example\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meaning(props) {\n  if (props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Meaning\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: props.meaning.partOfSpeech\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), props.meaning.definitions.map(function (definition, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [definition.definition, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 18,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Example, {\n                  example: definition.example\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 19,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Synonyms, {\n                  synonyms: definition.synonyms\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  } else {\n    alert(\"Please try again\");\n  }\n}\n_c = Meaning;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meaning\");","map":{"version":3,"sources":["/Users/annikaklein/Documents/Sonstiges/Coding/GitHub/dictionary-project/src/Meaning.js"],"names":["React","Synonyms","Example","Meaning","props","meaning","partOfSpeech","definitions","map","definition","index","example","synonyms","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,MAAIA,KAAJ,EAAW;AACT,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,kBAAKA,KAAK,CAACC,OAAN,CAAcC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,KAAK,CAACC,OAAN,CAAcE,WAAd,CAA0BC,GAA1B,CAA8B,UAAUC,UAAV,EAAsBC,KAAtB,EAA6B;AAC1D,4BACE;AAAA,iCACE;AAAA,mCACE;AAAA,qCACE;AAAA,2BACGD,UAAU,CAACA,UADd,eAEE;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,OAAD;AAAS,kBAAA,OAAO,EAAEA,UAAU,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE,QAAC,QAAD;AAAU,kBAAA,QAAQ,EAAEF,UAAU,CAACG;AAA/B;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAeD,OAhBA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD,GAvBD,MAuBO;AACLG,IAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;AACF;KA3BuBV,O","sourcesContent":["import React from \"react\";\nimport \"./Meaning.css\";\nimport Synonyms from \"./Synonyms\";\nimport Example from \"./Example\";\n\nexport default function Meaning(props) {\n  if (props) {\n    return (\n      <div className=\"Meaning\">\n        <h3>{props.meaning.partOfSpeech}</h3>\n        {props.meaning.definitions.map(function (definition, index) {\n          return (\n            <div key={index}>\n              <ul>\n                <li>\n                  <p>\n                    {definition.definition}\n                    <br />\n                    <Example example={definition.example} />\n                    <br />\n                    <Synonyms synonyms={definition.synonyms} />\n                  </p>\n                </li>\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    alert(\"Please try again\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}